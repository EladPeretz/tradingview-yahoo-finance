name: Flask App CI/CD with Ngrok

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Download and install ngrok properly
      - name: Set up ngrok
        run: |
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin

      # Step 5: Start Flask app on correct port
      - name: Start Flask app
        run: |
          nohup python app.py > flask.log 2>&1 &
          sleep 5
          echo "Flask app started"

      # Step 6: Start ngrok to expose Flask app
      - name: Start ngrok
        run: |
          nohup ngrok http 5000 > ngrok.log 2>&1 &
          sleep 15  # Give ngrok time to initialize

      # Step 7: Debug ngrok log
      - name: Debug ngrok log
        run: cat ngrok.log

      # Step 8: Fetch and display ngrok public URL
      - name: Get ngrok URL
        run: |
          echo "Fetching ngrok tunnel info..."
          NGROK_JSON=$(curl -s http://localhost:4040/api/tunnels)
          echo "Ngrok response: $NGROK_JSON"
          NGROK_URL=$(echo "$NGROK_JSON" | jq -r '.tunnels[0].public_url')
          echo "NGROK URL: $NGROK_URL"
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

      # Step 9: Use ngrok URL (optional test)
      - name: Test endpoint
        run: |
          curl $NGROK_URL/api/symbols || echo "API not available"
