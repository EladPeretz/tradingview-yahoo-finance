name: Flask App CI/CD with Ngrok

on:
  push:
    branches:
      - main  # Or specify your branch here

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python and install dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Specify your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 3: Install ngrok (fixed)
      - name: Set up ngrok
        run: |
          curl -sSL https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip -o ngrok.zip
          unzip ngrok.zip
          sudo mv ngrok /usr/local/bin

      # Step 4: Start Flask app in the background
      - name: Start Flask app
        run: |
          nohup python app.py > flask.log 2>&1 &

      # Step 5: Expose Flask app using ngrok
      - name: Expose Flask app with ngrok
        run: |
          nohup ngrok http 5000 > ngrok.log 2>&1 &
          sleep 6  # Give ngrok time to initialize

      # Step 6: Get ngrok public URL
      - name: Get ngrok URL
        run: |
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "NGROK URL: $NGROK_URL"
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

      # Step 7: Use the ngrok URL (Optional)
      - name: Output ngrok URL
        run: |
          echo "Your app is now accessible at: $NGROK_URL"

      # Step 8: Test endpoint (Optional)
      - name: Test API endpoint
        run: |
          curl $NGROK_URL/api/symbols || echo "API test failed"
