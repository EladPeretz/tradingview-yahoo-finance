name: Flask App CI/CD with Ngrok

on:
  push:
    branches:
      - main  # Or specify your branch here

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python and install dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Specify your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 3: Install ngrok
      - name: Set up ngrok
        run: |
          curl -s https://ngrok.com/download | tar xvz -C /tmp
          mv /tmp/ngrok* /usr/local/bin/ngrok

      # Step 4: Start Flask app in the background
      - name: Start Flask app
        run: |
          nohup python app.py &  # Start Flask app in the background
          
      # Step 5: Expose Flask app using ngrok
      - name: Expose Flask app with ngrok
        run: |
          ngrok http 5000 > /dev/null &  # Expose Flask app on port 5000
          sleep 5  # Wait for ngrok to establish the tunnel

      # Step 6: Get ngrok public URL
      - name: Get ngrok URL
        run: |
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "NGROK URL: $NGROK_URL"  # Output the URL for visibility
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV  # Set the ngrok URL as an environment variable

      # Step 7: Use the ngrok URL (e.g., you can perform tests or log the URL)
      - name: Use ngrok URL
        run: |
          echo "Your app is now accessible at: $NGROK_URL"
          
      # Step 8: (Optional) If you want to test the app, you can run curl requests here:
      - name: Test API endpoint (Optional)
        run: |
          curl $NGROK_URL/api/symbols
