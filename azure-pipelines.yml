trigger:
  branches:
    include:
      - main  # or 'master' if your repo uses that

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:

# Step 1: Checkout the code
- task: Checkout@1
  displayName: 'Checkout Repository'

# Step 2: Set up Python
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
  displayName: 'Use Python 3.x'

# Step 3: Install dependencies
- script: |
    python -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
  displayName: 'Install Python Dependencies'

# Step 4: Run the Flask app (optional - only if you want it running during build)
# This will only run during pipeline build execution for testing
- script: |
    source venv/bin/activate
    python app.py &
    sleep 5
  displayName: 'Run Flask App Temporarily (for testing)'

# Step 5: Publish the artifacts (optional if you want to deploy it somewhere)
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)'
    ArtifactName: drop
    publishLocation: Container
  displayName: 'Publish Project Files'
